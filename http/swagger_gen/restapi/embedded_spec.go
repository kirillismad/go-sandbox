// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "APIExample",
    "contact": {},
    "version": "1.0"
  },
  "paths": {
    "/file": {
      "get": {
        "description": "Send a file",
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "files"
        ],
        "summary": "Send a file",
        "operationId": "DownloadFile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string"
              },
              "Content-Type": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "description": "Get a list of products",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "List products",
        "operationId": "ListProducts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/echo_example.Product"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new product",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Create a new product",
        "operationId": "CreateProduct",
        "parameters": [
          {
            "description": "Product",
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Get a product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Get a product by ID",
        "operationId": "GetProduct",
        "parameters": [
          {
            "type": "integer",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Update a product by ID",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "type": "integer",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Product",
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Delete a product by ID",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "type": "integer",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "echo_example.Product": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "id": {
          "type": "integer"
        },
        "interest": {
          "type": "number"
        },
        "is_active": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "total": {
          "type": "integer"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "APIExample",
    "contact": {},
    "version": "1.0"
  },
  "paths": {
    "/file": {
      "get": {
        "description": "Send a file",
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "files"
        ],
        "summary": "Send a file",
        "operationId": "DownloadFile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string"
              },
              "Content-Type": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "description": "Get a list of products",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "List products",
        "operationId": "ListProducts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/echo_example.Product"
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new product",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Create a new product",
        "operationId": "CreateProduct",
        "parameters": [
          {
            "description": "Product",
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Get a product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Get a product by ID",
        "operationId": "GetProduct",
        "parameters": [
          {
            "type": "integer",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Update a product by ID",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "type": "integer",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Product",
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/echo_example.Product"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a product by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "products"
        ],
        "summary": "Delete a product by ID",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "type": "integer",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "echo_example.Product": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "id": {
          "type": "integer"
        },
        "interest": {
          "type": "number"
        },
        "is_active": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "total": {
          "type": "integer"
        }
      }
    }
  }
}`))
}
