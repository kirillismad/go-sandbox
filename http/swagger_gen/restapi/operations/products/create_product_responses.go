// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"sandbox/http/swagger_gen/models"
)

// CreateProductCreatedCode is the HTTP code returned for type CreateProductCreated
const CreateProductCreatedCode int = 201

/*
CreateProductCreated Created

swagger:response createProductCreated
*/
type CreateProductCreated struct {

	/*
	  In: Body
	*/
	Payload *models.EchoExampleProduct `json:"body,omitempty"`
}

// NewCreateProductCreated creates CreateProductCreated with default headers values
func NewCreateProductCreated() *CreateProductCreated {

	return &CreateProductCreated{}
}

// WithPayload adds the payload to the create product created response
func (o *CreateProductCreated) WithPayload(payload *models.EchoExampleProduct) *CreateProductCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create product created response
func (o *CreateProductCreated) SetPayload(payload *models.EchoExampleProduct) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProductCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateProductBadRequestCode is the HTTP code returned for type CreateProductBadRequest
const CreateProductBadRequestCode int = 400

/*
CreateProductBadRequest Bad Request

swagger:response createProductBadRequest
*/
type CreateProductBadRequest struct {

	/*
	  In: Body
	*/
	Payload map[string]string `json:"body,omitempty"`
}

// NewCreateProductBadRequest creates CreateProductBadRequest with default headers values
func NewCreateProductBadRequest() *CreateProductBadRequest {

	return &CreateProductBadRequest{}
}

// WithPayload adds the payload to the create product bad request response
func (o *CreateProductBadRequest) WithPayload(payload map[string]string) *CreateProductBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create product bad request response
func (o *CreateProductBadRequest) SetPayload(payload map[string]string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateProductBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if payload == nil {
		// return empty map
		payload = make(map[string]string, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
